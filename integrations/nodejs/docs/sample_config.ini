;==========================================================================
; Sample WickrIO config file
;
; Overview:
;
; This file contains a list of WickrIO Bot client names and for each one
; a list of configuration values. The config file will be used to create
; these WickrIO bot clients from the WickrIO system console. The "config"
; command will prompt you for the location of this file. Then it will use
; the information from this file to create all of the WickrIO bot clients
; defined in the file.
;
; Config file organization:
;
; This file has several groups of key/value pairs. The "clients" group is
; used to identify the list of WickrIO bot client user names. This is the
; actualy WickrIO bot client user name used to create the bot client on the
; Wickr admin console. 
; 
; Each WickrIO bot client user name identified in the "clients" group is a
; key that is used to identify a group for that WickrIO bot client in this
; file. That group contains the values necessary to create the specific
; instance of a bot client. If the bot client is to run in auto_login mode
; the "auto_login" key/value pair should be set to "true", other set it to
; "false". Autologin mode allows a bot client to be restarted without
; having to enter a password. The initial start of a bot client will 
; require a password, but subsequent restarts will not. If the "auto_login"
; key/value pair is not defined then the default is "true".
;
; The "integration" key/value pair is used to identify if there is an
; integration associated with the WickrIO bot client. Currnent bot client
; integrations include the following:
;
;  - File bot (sample)
;  - Hubot
;  - Web interface bot
;  - Welcome bot (sample)
;
; The file bot is a sample integration that you can use to store and 
; retrieve files on/from. This is a sample integration that you can use or
; modify to do what you want.
;
; The Hubot is an integration of the Hubot automation tool. The Wickr
; version supports many of the Hubot supported packages. In order to use
; the Hubot integration you will need to specify which of the packages you
; wish to use. See the examples later in this file.
;
; The web interface is an integration that provides an HTTP/HTTPS interface
; to the node.js addon API set. To use this integration you will need to
; set specific values to allow the web interface to communicate with the
; internet.
;
; The Welcome bot is a sample integration that you can use to return a set
; of messages to Wickr clients to send messages to your WicrkIO bot. The
; list of messages will be sent in sequence, one for each message that is
; received.
;
; See the sections below for more details on the values that need to be set
; for each of the possible integrations.
;==========================================================================

[clients]
sample_welcome_bot=true
sample_file_bot=true
sample_hubot=true
sample_slackonly_hubot=true
sample_web_interface=true

;==========================================================================
; Sample Welcome bot integration setup
;==========================================================================
[sample_welcome_bot]
auto_login="true"
integration="welcome_bot"

;==========================================================================
; Sample file bot integration setup
;==========================================================================
[sample_file_bot]
auto_login="true"
integration="file_bot"

;==========================================================================
; Sample Hubot integration setup
;==========================================================================
[sample_web_interface]
auto_login="true"
integration="web_interface"
LISTEN_PORT=4001
API_KEY="ABC123232423"

;==========================================================================
; Sample Hubot integration setup
;
; For the Hubot integration type you will use a "integration" key/value
; with the value equal to "hubot".
; To identify which hubot scripts you want an instance of a hubot to use,
; add a "scripts" key with a comma separated list of the scripts to use.
; The Hubot integration supports several scripts, with the following at
; time this file was created:
;
;   Slack : scripts value is "slack"
;   Chatter : scripts value is "chatter"
;   Uber : scripts value is "uber"
;   Subreddit : scripts value is "subreddit"
;   Google Maps : scripts value is "maps"
;   Pugme : scripts value is "pugme"
;   Giphy : scripts value is"giphy"
;   Crypto : scripts value is "crypto"
;
; Each hubot script may also require some configuration values. See the
; samples below for a possible list of the configuration values.
;
; This is a sample hubot configuration the following hubot scripts active:
;   Slack, Chatter, Uber, Subreddit, Google Maps, Pugme, Giphy and Crypto
;==========================================================================
[sample_hubot]
auto_login="true"
integration="hubot"
scripts=slack,chatter,uber,subreddit,maps,pubme,giphy,crypto
SLACK_CLIENT_ID="slackClientID"
SLACK_CLIENT_SECRET="slackSecret"
SLACK_REDIRECT_URI="https://slack.com/oauth/authorize"
CHATTER_CLIENT_ID="chatterClientID"
CHATTER_CLIENT_SECRET="chatterSecret"
CHATTER_REDIRECT_URI="https://mychatterredirecdt.com/oauth/authorize"
UBER_CLIENT_ID="uberClientID"
UBER_CLIENT_SECRET="uberSecret"
UBER_SERVER_TOKEN="uberServerToken"
UBER_REDIRECT_URI="https://redirect"
GOOGLE_MAPS_KEY="googleMapsKey"
GOOGLE_MAPS_GEOCODE_KEY="googleMapsGeocodeKey"
GOOGLE_MAPS_GEOLOCATE_KEY="googleMapsGeolocateKey"


;==========================================================================
; Sample Hubot integration setup
;
; This is a sample hubot configuration with the Slack scripts only.
;==========================================================================
[sample_slackonly_hubot]
auto_login="true"
integration="hubot"
scripts=slack
SLACK_CLIENT_ID="slackClientID"
SLACK_CLIENT_SECRET="slackSecret"
SLACK_REDIRECT_URI="https://slack.com/oauth/authorize"
